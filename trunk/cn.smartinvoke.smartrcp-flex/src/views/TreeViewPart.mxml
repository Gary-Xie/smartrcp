<?xml version="1.0" encoding="utf-8"?>
<gui:RCPModule xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:gui="cn.smartinvoke.gui.*"
	layout="vertical" creationComplete="init()">
	<mx:Script>
		<![CDATA[
			import cn.smartinvoke.smartrcp.gui.module.CActionEvent;
			import cn.smartinvoke.smartrcp.gui.control.CActionManager;
			import cn.smartinvoke.RemoteObject;
			import cn.smartinvoke.smartrcp.CApplication;
			import cn.smartinvoke.smartrcp.gui.FlashViewer;
			import mx.collections.ArrayCollection;
			import cn.smartinvoke.smartrcp.gui.module.CPartEvent;
			import mx.events.DragEvent;
			import mx.controls.Alert;
			import cn.smartinvoke.rcp.CLayoutBasicInfo;
			import cn.smartinvoke.smartrcp.gui.control.ViewManager;
			import mx.controls.Tree;
			import mx.events.ListEvent; 
			import cn.smartinvoke.executor.Executor;
			import cn.smartinvoke.smartrcp.gui.module.CEvent;
			import org.eclipse.swt.CEventType;
			import org.eclipse.swt.widgets.Display;
			function init():void{
				//添加键盘事件监听			
			    Display.getCurrent().addListener(CEventType.KeyDown,this.onKeyEvent,this);
				Display.getCurrent().addListener(CEventType.KeyUp,this.onKeyEvent,this);
				//添加viewPart监听器
				ViewManager.Instance.addListener(this.onViewModify,this);
				
				//添加全局action监听，并且该action定义了快捷键
				CActionManager.Instance.addListener("test",function (evt:CActionEvent):void{
					Alert.show(evt.actionId+"的事件触发了");
				},this);
			}
			private function onViewModify(evt:CPartEvent):void{
				var str:String=evt.taget.getTitle();
				if(evt.type==CPartEvent.Part_Closed){
					str+=" closed";
				}else if(evt.type==CPartEvent.Part_Opened){
					str+=" opened";
					
				}else if(evt.type==CPartEvent.Part_Activated){
					str+=" actived";
					
					var modulePath:String=evt.taget.getModulePath();
					if(modulePath.indexOf(".swf")!=-1){//是flash窗口
					    var path:String=modulePath;
					    path=path.substr(0,path.length-4)+".mxml";
						this.showModuleContent(path);
					}
				}
				this.labelStatus.text=str;
			}
			private function onKeyEvent(evt:CEvent):void{
				var info:String=evt.type+"  "+evt.character+" "+evt.time;
				labelStatus.text=info;
			}
			private function onItemDbClick(evt:ListEvent):void{
				var selItem:XML=Tree(evt.target).selectedItem as XML;
				//Alert.show(selItem+"");
				if(selItem!=null){
					var modulePath:String=selItem.@module;
					if(modulePath==null || modulePath==""){
					   return;
				    }
					//打开视图
					this.openViewPart(modulePath,selItem.@label);
					//显示源代码
					this.showSourceCode(modulePath);
				}
			}
			/**
			 *打开指定视图，如果已经打开则显示
			 */
			private function openViewPart(modulePath:String,title:String):void{
				if(modulePath==null || modulePath==""){
					return;
				}
				var opened:ArrayCollection=ViewManager.Instance.findAppIds(modulePath);
				if(opened!=null && opened.length>0){
						this.labelStatus.text="已经打开";
						var appId:String=opened[0] as String;
						ViewManager.Instance.showViewPart(appId);
				}else{
					var basicInfo:CLayoutBasicInfo=new CLayoutBasicInfo();
					basicInfo.isModuleSwf=true;
					basicInfo.title=title;//selItem.@label;
					basicInfo.viewId=modulePath;
					ViewManager.Instance.openViewPart(basicInfo,true,ViewManager.VIEW_ACTIVATE);
				}
			}
			
			public function setStatusText(text:String):void{
				this.labelStatus.text=text;
			}
			
			private function setMin():void{
				ViewManager.Instance.setState(this.flashViewer.appId,ViewManager.STATE_MINIMIZED);
			}
			
			/**
			 *显示指定模块的源代码
			 */
			private function showSourceCode(modulePath:String):void{
				//获得modulePath模块对应的源代码
				//如果是项目主页则打开项目网站
				if(modulePath=="cn.smartinvoke.smartrcp.WebBrowser"){
				  //获得浏览器视图对象并调用其setHtml方法设置其源代码
			      var viewers:ArrayCollection=ViewManager.Instance.findFlashViewers(modulePath);
			      if(viewers!=null && viewers.length>0){
			    	 var viewer:FlashViewer=viewers[0] as FlashViewer;
			    	 viewer.invoke("openUrl",["http://code.google.com/p/smartrcp/"]);
			      }
				  return;	
				}
				var path:String=CApplication.Instance.getBaseFolder()+"/srcview/source/"+modulePath;
				path=path.substr(0,path.length-4)+".mxml.html";
				/**var fileReader:RemoteObject=new RemoteObject();
				fileReader.create("java.io.FileReader",[path]);
				//根据fileReader对象创建BufferedReader对象
				var reader:RemoteObject=new RemoteObject();
				reader.create("java.io.BufferedReader",[fileReader]);
			    //读取文件内容
			    var content:String=this.htmlHeader;
			    while(true){
			    	var line:String=reader.call("readLine") as String;
			    	if(line!=null){
			    		content+=line+"\n";
			    	}else{
			    		break;
			    	}
			    }
			    content+="</textarea></body></html>";
			    //释放资源
			    reader.asyncCall("close");
			    //释放java中的对应服务对象
			    reader.gc();
			    fileReader.gc();
			    */
			    Alert.show(path);
			    //显示文件
			    this.showModuleContent(path);
			}
			private function showModuleContent(path:String):void{
				var browserId:String="cn.smartinvoke.smartrcp.WebBrowser";
			    
			    this.openViewPart(browserId,"源代码");
			    //获得浏览器视图对象并调用其setHtml方法设置其源代码
			    var viewers:ArrayCollection=ViewManager.Instance.findFlashViewers(browserId);
			    if(viewers!=null && viewers.length>0){
			    	var viewer:FlashViewer=viewers[0] as FlashViewer;
			    	viewer.invoke("setHtml",[path]);
			    }
			}
		]]>
	</mx:Script>
	<mx:XMLList id="treeData">
         <node>
            <node label="项目主页" module="cn.smartinvoke.smartrcp.WebBrowser"/>
            <node label="界面">
              <node label="全局Action及应用">
                <node label="工具栏" module="views/AppToolBar_T.swf"/>
                <node label="菜单栏" module="views/AppMenuBar_T.swf"/>
              </node>
              <node label="右键菜单" module="views/ContextMenu_T.swf"/>
              <node label="键盘鼠标事件" module="views/MouseAndKeyBordEvt.swf"></node>
              <node label="状态栏" module="views/StatusLine_T.swf"/>
              <node label="视图部分">
                 <node label="视图管理" module="views/ViewManager_T.swf"/>
                 <node label="视图调用" module="views/ModuleInvoke_T.swf"/>
                 <node label="工具栏和下拉菜单" module="views/ViewPartActionBar_T.swf"/>
              </node>
              <node label="窗口管理" module="views/FlashShell_T.swf"/>
              <node label="对话框" module="views/Dialog_T.swf"/>
              <node label="数据库操作" module="views/DbInvoke.swf"/>
            </node>
           <!-- <node label="扩展API">
               <node label="调用J2SE库"/>
               <node label="扩展库"/>
               <node label="Java事件通知"/>
               <node label="调用eclipse插件视图"/>
            </node>
            <node label="应用程序管理"/>-->
            
        </node>
    </mx:XMLList>
    
    <mx:Panel title="功能列表" cornerRadius="0" paddingLeft="0" paddingRight="0"
            styleName="opaquePanel" width="100%" height="100%">
	 <mx:Tree width="100%" height="100%" dataProvider="{this.treeData}"  itemDoubleClick="this.onItemDbClick(event)"
		labelField="@label" showRoot="false" doubleClickEnabled="true" borderThickness="0">
	 </mx:Tree>
	 <mx:ControlBar horizontalAlign="right">
            <mx:Image id="image"
                    source="@Embed('info.png')"/>
                    <mx:Text id="labelStatus" width="100%"/>
            <mx:Button label="最小化" click="setMin()"/>
     </mx:ControlBar>
	</mx:Panel>
	<mx:Script>
		<![CDATA[
			 var htmlHeader:String=
			"<html><head><title></title>"+
"  <script type=text/javascript src=syntax/shCore.js></script>"+
"  <script type=text/javascript src=syntax/shBrushJava.js></script>"+
"  <script type=text/javascript src=syntax/shBrushCSharp.js></script>"+
"  <script type=text/javascript src=syntax/shBrushXml.js></script>"+
"  <link rel=stylesheet type=text/css href=syntax/SyntaxHighlighter.css>"+
"  <script type=text/javascript>"+
"  window.onload = function () {"+
"dp.SyntaxHighlighter.ClipboardSwf = 'syntax/clipboard.swf';"+
"dp.SyntaxHighlighter.HighlightAll('code');"+
"} "+
"</script></head>"+
"<body style=padding-top: 0px;padding-left: 0px;margin-top: 0px;>"+
"<textarea name=code class=java rows=15 cols=100>";
		]]>
	</mx:Script>
</gui:RCPModule> 
